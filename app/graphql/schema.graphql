"""
Autogenerated input type of CreateRoom
"""
input CreateRoomInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
}

"""
Autogenerated return type of CreateRoom.
"""
type CreateRoomPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  room: Room
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime @specifiedBy(url: "https://tools.ietf.org/html/rfc3339")

type Mutation {
  createRoom(
    """
    Parameters for CreateRoom
    """
    input: CreateRoomInput!
  ): CreateRoomPayload
  updateRoom(
    """
    Parameters for UpdateRoom
    """
    input: UpdateRoomInput!
  ): UpdateRoomPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Query {
  """
  Room
  """
  room(id: ID!): Room
  rooms(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): RoomConnection!
  temperatureReadings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    roomId: ID!
  ): TemperatureReadingConnection!
}

type Room {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String
  updatedAt: ISO8601DateTime!
}

"""
The connection type for Room.
"""
type RoomConnection {
  """
  A list of edges.
  """
  edges: [RoomEdge]

  """
  A list of nodes.
  """
  nodes: [Room]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type RoomEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Room
}

type TemperatureReading {
  humidity: Float!
  id: ID!
  recordedAt: ISO8601DateTime!
  temperature: Float!
}

"""
The connection type for TemperatureReading.
"""
type TemperatureReadingConnection {
  """
  A list of edges.
  """
  edges: [TemperatureReadingEdge]

  """
  A list of nodes.
  """
  nodes: [TemperatureReading]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type TemperatureReadingEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: TemperatureReading
}

"""
Autogenerated input type of UpdateRoom
"""
input UpdateRoomInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  name: String!
}

"""
Autogenerated return type of UpdateRoom.
"""
type UpdateRoomPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]!
  room: Room
}
